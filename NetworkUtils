
Permission: Add permission in to the Android manifest file.
<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

API level 29 or above use below function which is written in Kotlin.

=========================== KOTLIN =======================================
fun isOnline(context: Context?): Boolean
    {
        var result = false
        val connectivityManager = context?.getSystemService(Context.CONNECTIVITY_SERVICE) as ConnectivityManager?
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            connectivityManager?.run {
                connectivityManager.getNetworkCapabilities(connectivityManager.activeNetwork)?.run {
                    result = when {
                        hasTransport(NetworkCapabilities.TRANSPORT_WIFI) -> true
                        hasTransport(NetworkCapabilities.TRANSPORT_CELLULAR) -> true
                        hasTransport(NetworkCapabilities.TRANSPORT_ETHERNET) -> true
                        else -> false
                    }
                }
            }
        } else {
            connectivityManager?.run {
                connectivityManager.activeNetworkInfo?.run {
                    if (type == ConnectivityManager.TYPE_WIFI) {
                        result = true
                    } else if (type == ConnectivityManager.TYPE_MOBILE) {
                        result = true
                    }
                }
            }
        }
        return result
    }

=========================== JAVA CODE =======================================

public static boolean isOnline( Context context )
    {

        ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);

        NetworkInfo netInfo = cm.getActiveNetworkInfo();

        if ( netInfo != null
                && netInfo.isConnectedOrConnecting()
                && cm.getActiveNetworkInfo().isAvailable()
                && cm.getActiveNetworkInfo().isConnected() )
        {

            return true;
        }

        return false;
    }
    
    /***
     * Function that checks if network is available
     *
     * @param context passed by calling activity
     * @return true if network available otherwise false
     */
    fun isNetworkAvailable(context: Context): Boolean
    {
        val cm = context.getSystemService(Context.CONNECTIVITY_SERVICE) as ConnectivityManager
        val activeNetwork = cm.activeNetworkInfo
        if (activeNetwork != null)
        {
            if (activeNetwork.type == ConnectivityManager.TYPE_WIFI)
            {
                // connected to wifi
                return true
            }
            else if (activeNetwork.type == ConnectivityManager.TYPE_MOBILE)
            {// connected to the mobile provider's data plan
                return true
            }
            else if (activeNetwork.type == ConnectivityManager.TYPE_ETHERNET)
            {// connected to the ethernet
                return true
            }
        }
        return false
    }
